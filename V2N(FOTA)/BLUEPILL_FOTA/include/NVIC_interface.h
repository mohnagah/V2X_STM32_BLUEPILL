#ifndef NVIC_INTERFACE_H_
#define NVIC_INTERFACE_H_

typedef enum{
    NVIC_POSITION_WWDG,
    NVIC_POSITION_PVD,
    NVIC_POSITION_TAMPER,
    NVIC_POSITION_RTC,
    NVIC_POSITION_FLASH,
    NVIC_POSITION_RCC,
    NVIC_POSITION_EXTI0,
    NVIC_POSITION_EXTI1,
    NVIC_POSITION_EXTI2,
    NVIC_POSITION_EXTI3,
    NVIC_POSITION_EXTI4,
    NVIC_POSITION_DMA1STR0,
    NVIC_POSITION_DMA1STR1,
    NVIC_POSITION_DMA1STR2,
    NVIC_POSITION_DMA1STR3,
    NVIC_POSITION_DMA1STR4,
    NVIC_POSITION_DMA1STR5,
    NVIC_POSITION_DMA1STR6,
    NVIC_POSITION_ADC,
    NVIC_POSITION_CAN1_TX,
    NVIC_POSITION_CAN1_RX0,
    NVIC_POSITION_CAN1_RX1,
    NVIC_POSITION_CAN1_SCE,
    NVIC_POSITION_EXTI9_5,
    NVIC_POSITION_TIM1_BRK,
    NVIC_POSITION_TIM1_UP,
    NVIC_POSITION_TIM1_TRG_COM,
    NVIC_POSITION_TIM1_CC,
    NVIC_POSITION_TIM2,
    NVIC_POSITION_TIM3,
    NVIC_POSITION_TIM4,
    NVIC_POSITION_I2C1_EV,
    NVIC_POSITION_I2C1_ER,
    NVIC_POSITION_I2C2_EV,
    NVIC_POSITION_I2C2_ER,
    NVIC_POSITION_SPI1,
    NVIC_POSITION_SPI2,
    NVIC_POSITION_USART1,
    NVIC_POSITION_USART2,
    NVIC_POSITION_USART3,
    NVIC_POSITION_EXTI15_10,
    NVIC_POSITION_RTC_ALARM,
    NVIC_POSITION_OTG_FS_WKUP,
    NVIC_POSITION_TIM5=50,
    NVIC_POSITION_SPI3,
    NVIC_POSITION_USART4,
    NVIC_POSITION_USART5,
    NVIC_POSITION_TIM6,
    NVIC_POSITION_TIM7,
    NVIC_POSITION_DMA2STR0,
    NVIC_POSITION_DMA2STR1,
    NVIC_POSITION_DMA2STR2,
    NVIC_POSITION_DMA2STR3,
    NVIC_POSITION_DMA2STR4,
    NVIC_POSITION_ETH,
    NVIC_POSITION_ETH_WKUP,
    NVIC_POSITION_CAN2_TX,
    NVIC_POSITION_CAN2_RX0,
    NVIC_POSITION_CAN2_RX1,
    NVIC_POSITION_CAN2_SCE,
    NVIC_POSITION_OTG_FS,
    NVIC_POSITION_DMA2STR5,
    NVIC_POSITION_DMA2STR6,
    NVIC_POSITION_DMA2STR7,
    NVIC_POSITION_USART6,
    NVIC_POSITION_I2C3_EV,
    NVIC_POSITION_I2C3_ER,
    NVIC_POSITION_FPU = 81,
    NVIC_POSITION_SPI4 = 84
}tstrNVIC_intPos;

typedef enum{
	Group16Sub0 = 3,
	Group8Sub2,
	Group4Sub4,
	Group2Sub8,
	Group0Sub16
}tstrNVIC_groups;

void NVIC_voidEnable(tstrNVIC_intPos enuPositionCpy);

void NVIC_voidDisable(tstrNVIC_intPos enuPositionCpy);

void NVIC_voidPendingSet(tstrNVIC_intPos enuPositionCpy);

void NVIC_voidPendingClear(tstrNVIC_intPos enuPositionCpy);

uint8 NVIC_u8ActiveRead(tstrNVIC_intPos enuPositionCpy);

void NVIC_voidSetInterruptGroupMode(tstrNVIC_groups enuGroupModeCpy);

void NVIC_voidSetInterruptPriority(uint8 tstrNVIC_intPos, uint8 u8GroupPriCpy, uint8 u8SubPriCpy);


#endif
